import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import UserAvatar from './UserAvatar';
import { 
  getUserIdFromStorage, 
  analyzeCycleAbnormalities,
  checkUserGender,
  checkExistingCycle,
  fetchLatestCycle,
  handleFormChange,
  handleFormSubmit,
  handleUpdateButtonClick,
  checkGenderAccess,
  initializeData,
  labelStyle,
  inputStyle
} from './utils/periodTrackingHelpers';/**
 * PeriodTracking Component
 * This component allows users to track and visualize their menstrual cycle.
 * It integrates with the Menstrual Cycle API endpoints.
 */
const PeriodTracking = () => {
  const [formData, setFormData] = useState({
    startDate: '',
    cycleLength: 28,
    periodLength: 5,
    flowLevel: '' // M·ª©c ƒë·ªô m√°u kinh: √≠t/trung b√¨nh/nhi·ªÅu
  });
  const [isSubmitted, setIsSubmitted] = useState(false);
  const [results, setResults] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const [hasExistingCycle, setHasExistingCycle] = useState(false);
  const [userGender, setUserGender] = useState(null);
  const [genderCheckComplete, setGenderCheckComplete] = useState(false);
  const [cycleAbnormalities, setCycleAbnormalities] = useState([]);

  // L·∫•y userid t·ª´ localStorage
  const userid = getUserIdFromStorage();
  
  useEffect(() => {
    const fetchLatestCycleWrapper = async () => {
      await fetchLatestCycle(
        userid, 
        setLoading, 
        setError, 
        setResults, 
        setIsSubmitted, 
        setCycleAbnormalities, 
        setFormData
      );
    };

    initializeData(
      userid,
      checkUserGender,
      setUserGender,
      setGenderCheckComplete,
      checkExistingCycle,
      setError,
      setHasExistingCycle,
      fetchLatestCycleWrapper,
      setIsSubmitted,
      setResults,
      setLoading
    );
    // eslint-disable-next-line
  }, [userid]);

  const handleChange = (e) => {
    handleFormChange(e, formData, setFormData);
  };

  const handleSubmit = async (e) => {
    const fetchLatestCycleWrapper = async () => {
      await fetchLatestCycle(
        userid, 
        setLoading, 
        setError, 
        setResults, 
        setIsSubmitted, 
        setCycleAbnormalities, 
        setFormData
      );
    };

    await handleFormSubmit(
      e,
      formData,
      userid,
      setError,
      setLoading,
      setHasExistingCycle,
      setCycleAbnormalities,
      fetchLatestCycleWrapper
    );
  };

  // Gi·ªØ nguy√™n ph·∫ßn render, ch·ªâ thay ƒë·ªïi logic hi·ªÉn th·ªã form/k·∫øt qu·∫£
  return (
    <div style={{ 
      backgroundColor: "#f0f9ff", 
      minHeight: "100vh", 
      display: "flex", 
      flexDirection: "column", 
      width: "100vw",
      margin: 0,
      padding: 0,
      overflow: "hidden"
    }}>
      {/* Header */}      <header style={{
        background: "#19bdd4",
        width: "100%",
        padding: "22px 0",
        margin: 0,
        border: "none",
        position: "relative",
        minHeight: 90,
        boxShadow: "0 4px 20px rgba(8,145,178,0.15)",
        overflow: "hidden"
      }}>
        {/* Logo positioned to the left */}
        <div style={{
          position: "absolute",
          left: 24,
          top: "50%",
          transform: "translateY(-50%)",
          zIndex: 2
        }}>
          <Link to="/">
            <img
              src="/Logo.png"
              alt="Logo"
              style={{ 
                height: 80, 
                width: 80, 
                objectFit: "contain", 
                filter: "drop-shadow(0 2px 4px rgba(0,0,0,0.1))"
              }}
            />
          </Link>
        </div>
        
        {/* Title centered both horizontally and vertically */}
        <div style={{
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          width: "100%",
          height: "100%",
          position: "absolute",
          top: 0,
          left: 0,
          right: 0,
          bottom: 0
        }}>
          <h1
            style={{
              color: "#fff",
              margin: 0,
              fontWeight: 800,
              letterSpacing: 0.5,
              fontSize: 42, /* Increased from 38 to 42 */
              lineHeight: 1.1,
              fontFamily: 'Montserrat, Arial, sans-serif',
              textShadow: "0 2px 4px rgba(0,0,0,0.2)",
              textAlign: "center",
              padding: "0 80px" /* Added padding to ensure text doesn't overlap with logo/avatar */
            }}
          >
            Theo d√µi chu k·ª≥
          </h1>
        </div>        <div style={{ 
          position: "absolute", 
          top: 20, 
          right: 24,
          zIndex: 10
        }}>
          <UserAvatar userName="Nguy·ªÖn Th·ªã A" />
        </div>
      </header>

      {/* Main Content */}
      <main style={{
        padding: "40px",
        width: "100%",
        flex: 1,
        backgroundColor: "#fff",
        boxShadow: "0 5px 20px rgba(0,0,0,0.05)",
        marginTop: "-20px",
        boxSizing: "border-box"
      }}>
        {!userid ? (
          <div style={{ textAlign: "center", padding: "50px", fontSize: "18px", color: "#dc2626" }}>
            Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ s·ª≠ d·ª•ng t√≠nh nƒÉng theo d√µi chu k·ª≥.
          </div>
        ) : !genderCheckComplete ? (
          <div style={{ textAlign: "center", padding: "50px", fontSize: "18px", color: "#666" }}>
            ƒêang ki·ªÉm tra th√¥ng tin t√†i kho·∫£n...
          </div>
        ) : userGender && checkGenderAccess(userGender) ? (
          <div style={{ 
            textAlign: "center", 
            padding: "50px",
            maxWidth: "600px",
            margin: "0 auto"
          }}>
            <div style={{
              background: "rgba(239, 68, 68, 0.1)",
              borderRadius: "15px",
              padding: "30px",
              border: "2px solid rgba(239, 68, 68, 0.2)",
              marginBottom: "20px"
            }}>
              <div style={{ fontSize: "48px", marginBottom: "15px" }}>üö´</div>
              <h3 style={{ 
                color: "#dc2626", 
                marginBottom: "15px", 
                fontSize: "20px",
                fontWeight: "600"
              }}>
                T√≠nh nƒÉng kh√¥ng kh·∫£ d·ª•ng
              </h3>
              <p style={{ 
                fontSize: "16px", 
                color: "#6b7280",
                lineHeight: "1.6",
                marginBottom: "20px"
              }}>
                T√≠nh nƒÉng theo d√µi chu k·ª≥ kinh nguy·ªát ch·ªâ d√†nh cho ng∆∞·ªùi d√πng c√≥ gi·ªõi t√≠nh l√† <strong>N·ªØ</strong>.
                <br/>
                Gi·ªõi t√≠nh hi·ªán t·∫°i c·ªßa t√†i kho·∫£n: <strong>{userGender || 'Kh√¥ng x√°c ƒë·ªãnh'}</strong>
              </p>
              <div style={{
                background: "rgba(59, 130, 246, 0.1)",
                borderRadius: "10px",
                padding: "15px",
                marginBottom: "20px"
              }}>
                <p style={{ 
                  fontSize: "14px", 
                  color: "#1e40af",
                  margin: 0,
                  lineHeight: "1.5"
                }}>
                  üí° <strong>G·ª£i √Ω:</strong> B·∫°n c√≥ th·ªÉ c·∫≠p nh·∫≠t th√¥ng tin gi·ªõi t√≠nh trong ph·∫ßn 
                  <Link to="/user-account" style={{ color: "#1e40af", textDecoration: "underline" }}> T√†i kho·∫£n c·ªßa t√¥i</Link>
                </p>
              </div>
              <Link
                to="/"
                style={{
                  display: "inline-block",
                  background: "linear-gradient(90deg, #6b7280 0%, #9ca3af 100%)",
                  color: "#fff",
                  textDecoration: "none",
                  padding: "12px 25px",
                  borderRadius: "25px",
                  fontWeight: "600",
                  fontSize: "14px",
                  boxShadow: "0 4px 15px rgba(107, 114, 128, 0.3)",
                  transition: "all 0.3s ease"
                }}
              >
                ‚Üê Quay v·ªÅ trang ch·ªß
              </Link>
            </div>
          </div>
        ) : loading ? (
          <div style={{ textAlign: "center", padding: "50px", fontSize: "18px", color: "#666" }}>
            ƒêang t·∫£i d·ªØ li·ªáu chu k·ª≥ m·ªõi nh·∫•t...
          </div>
        ) : isSubmitted && results ? (
          <div style={{ textAlign: "center", padding: "20px" }}>
            {/* B·ªè ph·∫ßn th√¥ng b√°o th√†nh c√¥ng, ch·ªâ hi·ªÉn th·ªã k·∫øt qu·∫£ */}
            <div style={{
              background: "rgba(8, 145, 178, 0.05)",
              borderRadius: "20px",
              padding: "40px",
              border: "2px solid rgba(8, 145, 178, 0.1)",
              marginBottom: "35px",
              textAlign: "left",
              maxWidth: "1200px",
              margin: "0 auto 35px auto"
            }}>
              <h3 style={{
                color: "#0891b2",
                textAlign: "center",
                marginBottom: "30px",
                fontSize: "20px",
                fontWeight: "700"
              }}>
                K·∫øt qu·∫£ t√≠nh to√°n chu k·ª≥ kinh nguy·ªát
              </h3>

              {/* Ph·∫ßn ch√≠nh - th√¥ng tin quan tr·ªçng */}
              <div style={{
                display: "grid",
                gridTemplateColumns: "repeat(auto-fit, minmax(280px, 1fr))",
                gap: "25px",
                marginBottom: "30px"
              }}>
                <div style={{
                  background: "linear-gradient(135deg, #0891b2 0%, #22d3ee 100%)",
                  padding: "25px",
                  borderRadius: "15px",
                  color: "white",
                  textAlign: "center",
                  boxShadow: "0 4px 15px rgba(8, 145, 178, 0.3)"
                }}>
                  <div style={{ fontSize: "24px", marginBottom: "8px" }}>ü©∏</div>
                  <h4 style={{ margin: "0 0 10px 0", fontSize: "16px", fontWeight: "600" }}>K·ª≥ kinh nguy·ªát hi·ªán t·∫°i</h4>
                  <p style={{ margin: 0, fontSize: "18px", fontWeight: "700" }}>
                    {results?.periodStart}
                  </p>
                  <p style={{ margin: "5px 0 0 0", fontSize: "14px", opacity: 0.9 }}>
                    ƒë·∫øn {results?.periodEnd}
                  </p>
                </div>
                
                <div style={{
                  background: "linear-gradient(135deg, #f59e0b 0%, #fbbf24 100%)",
                  padding: "25px",
                  borderRadius: "15px",
                  color: "white",
                  textAlign: "center",
                  boxShadow: "0 4px 15px rgba(245, 158, 11, 0.3)"
                }}>
                  <div style={{ fontSize: "24px", marginBottom: "8px" }}>ü•ö</div>
                  <h4 style={{ margin: "0 0 10px 0", fontSize: "16px", fontWeight: "600" }}>Th·ªùi k·ª≥ r·ª•ng tr·ª©ng</h4>
                  <p style={{ margin: 0, fontSize: "18px", fontWeight: "700" }}>
                    {results?.ovulationStart}
                  </p>
                  <p style={{ margin: "5px 0 0 0", fontSize: "14px", opacity: 0.9 }}>
                    ƒë·∫øn {results?.ovulationEnd}
                  </p>
                </div>
                
                <div style={{
                  background: "linear-gradient(135deg, #10b981 0%, #34d399 100%)",
                  padding: "25px",
                  borderRadius: "15px",
                  color: "white",
                  textAlign: "center",
                  boxShadow: "0 4px 15px rgba(16, 185, 129, 0.3)"
                }}>
                  <div style={{ fontSize: "24px", marginBottom: "8px" }}>üíï</div>
                  <h4 style={{ margin: "0 0 10px 0", fontSize: "16px", fontWeight: "600" }}>Th·ªùi k·ª≥ th·ª• thai cao</h4>
                  <p style={{ margin: 0, fontSize: "18px", fontWeight: "700" }}>
                    {results?.fertilityStart}
                  </p>
                  <p style={{ margin: "5px 0 0 0", fontSize: "14px", opacity: 0.9 }}>
                    ƒë·∫øn {results?.fertilityEnd}
                  </p>
                </div>
              </div>              {/* Ph·∫ßn th√¥ng tin b·ªï sung */}
              <div style={{
                display: "grid",
                gridTemplateColumns: "repeat(auto-fit, minmax(240px, 1fr))",
                gap: "20px"
              }}>
                <div style={{
                  background: "rgba(255, 255, 255, 0.9)",
                  padding: "20px",
                  borderRadius: "12px",
                  border: "1px solid rgba(8, 145, 178, 0.15)",
                  textAlign: "center"
                }}>
                  <div style={{ fontSize: "20px", marginBottom: "8px", color: "#0891b2" }}>üìÖ</div>
                  <h4 style={{ color: "#0891b2", marginBottom: "8px", fontSize: "14px" }}>Chu k·ª≥ ti·∫øp theo</h4>
                  <p style={{ color: "#2c3e50", fontWeight: "700", fontSize: "16px", margin: 0 }}>
                    {results?.nextCycleStart}
                  </p>
                </div>
                
                <div style={{
                  background: "rgba(255, 255, 255, 0.9)",
                  padding: "20px",
                  borderRadius: "12px",
                  border: "1px solid rgba(8, 145, 178, 0.15)",
                  textAlign: "center"
                }}>
                  <div style={{ fontSize: "20px", marginBottom: "8px", color: "#0891b2" }}>üîö</div>
                  <h4 style={{ color: "#0891b2", marginBottom: "8px", fontSize: "14px" }}>K·∫øt th√∫c chu k·ª≥ hi·ªán t·∫°i</h4>
                  <p style={{ color: "#2c3e50", fontWeight: "700", fontSize: "16px", margin: 0 }}>
                    {results?.cycleEndDate}
                  </p>
                </div>
                
                <div style={{
                  background: "rgba(255, 255, 255, 0.9)",
                  padding: "20px",
                  borderRadius: "12px",
                  border: "1px solid rgba(8, 145, 178, 0.15)",
                  textAlign: "center"
                }}>
                  <div style={{ fontSize: "20px", marginBottom: "8px", color: "#0891b2" }}>üìä</div>
                  <h4 style={{ color: "#0891b2", marginBottom: "8px", fontSize: "14px" }}>Th√¥ng tin chu k·ª≥</h4>
                  <p style={{ color: "#2c3e50", fontWeight: "600", fontSize: "14px", margin: 0, lineHeight: "1.6" }}>
                    Chu k·ª≥: {results?.cycleLength} ng√†y<br/>
                    Kinh nguy·ªát: {results?.periodLength} ng√†y
                  </p>
                </div>
              </div>
            </div>
            
            {/* Hi·ªÉn th·ªã c·∫£nh b√°o b·∫•t th∆∞·ªùng chu k·ª≥ */}
            {cycleAbnormalities.length > 0 && (() => {
              // X√°c ƒë·ªãnh m·ª©c ƒë·ªô nghi√™m tr·ªçng cao nh·∫•t
              const maxSeverity = cycleAbnormalities.reduce((max, current) => {
                const severityLevels = { low: 1, medium: 2, high: 3 };
                return severityLevels[current.severity] > severityLevels[max] ? current.severity : max;
              }, 'low');
              
              // Thi·∫øt l·∫≠p m√†u s·∫Øc d·ª±a tr√™n m·ª©c ƒë·ªô nghi√™m tr·ªçng
              const severityColors = {
                low: {
                  bg: "rgba(251, 191, 36, 0.05)",
                  border: "rgba(251, 191, 36, 0.3)",
                  text: "#92400e",
                  icon: "‚ö†Ô∏è"
                },
                medium: {
                  bg: "rgba(249, 115, 22, 0.05)",
                  border: "rgba(249, 115, 22, 0.3)",
                  text: "#c2410c",
                  icon: "üî∂"
                },
                high: {
                  bg: "rgba(220, 38, 38, 0.05)",
                  border: "rgba(220, 38, 38, 0.3)",
                  text: "#dc2626",
                  icon: "üö®"
                }
              };
              
              const colors = severityColors[maxSeverity];
              
              return (
                <div style={{
                  background: colors.bg,
                  borderRadius: "15px",
                  padding: "25px",
                  border: `2px solid ${colors.border}`,
                  marginBottom: "30px",
                  textAlign: "left",
                  maxWidth: "1000px",
                  margin: "0 auto 30px auto"
                }}>
                  <div style={{ 
                    display: "flex", 
                    alignItems: "center", 
                    justifyContent: "center", 
                    marginBottom: "20px" 
                  }}>
                    <div style={{ fontSize: "24px", marginRight: "10px" }}>{colors.icon}</div>
                    <h4 style={{ 
                      color: colors.text, 
                      margin: 0, 
                      fontSize: "18px", 
                      fontWeight: "700" 
                    }}>
                      {maxSeverity === 'high' 
                        ? 'Ph√°t hi·ªán b·∫•t th∆∞·ªùng chu k·ª≥ kinh nguy·ªát nghi√™m tr·ªçng'
                        : maxSeverity === 'medium'
                        ? 'Ph√°t hi·ªán b·∫•t th∆∞·ªùng chu k·ª≥ kinh nguy·ªát c·∫ßn theo d√µi'
                        : 'Chu k·ª≥ kinh nguy·ªát c·∫ßn quan s√°t th√™m'
                      }
                    </h4>
                  </div>
                
                <div style={{
                  background: "rgba(254, 226, 226, 0.8)",
                  borderRadius: "10px",
                  padding: "20px",
                  marginBottom: "20px"
                }}>
                  <p style={{ 
                    fontSize: "15px", 
                    color: "#7f1d1d",
                    margin: "0 0 15px 0",
                    lineHeight: "1.6",
                    fontWeight: "500"
                  }}>
                    üîç <strong>K·∫øt qu·∫£ ph√¢n t√≠ch:</strong> Chu k·ª≥ kinh nguy·ªát c·ªßa b·∫°n c√≥ nh·ªØng d·∫•u hi·ªáu b·∫•t th∆∞·ªùng c·∫ßn ƒë∆∞·ª£c quan t√¢m v√† theo d√µi.
                  </p>
                  
                  {cycleAbnormalities.map((abnormality, index) => (
                    <div key={index} style={{
                      background: "#fff",
                      borderRadius: "8px",
                      padding: "15px",
                      marginBottom: index < cycleAbnormalities.length - 1 ? "15px" : "0",
                      border: "1px solid rgba(220, 38, 38, 0.2)"
                    }}>
                      <h5 style={{ 
                        color: "#dc2626", 
                        margin: "0 0 8px 0", 
                        fontSize: "16px",
                        fontWeight: "600"
                      }}>
                        üö® {abnormality.title}
                      </h5>
                      <p style={{ 
                        color: "#374151", 
                        margin: "0 0 12px 0", 
                        fontSize: "14px",
                        lineHeight: "1.5"
                      }}>
                        {abnormality.description}
                      </p>
                      
                      {abnormality.advice && (
                        <div style={{ 
                          background: "rgba(251, 191, 36, 0.1)",
                          borderRadius: "6px",
                          padding: "10px",
                          marginBottom: "12px",
                          border: "1px solid rgba(251, 191, 36, 0.3)"
                        }}>
                          <p style={{ 
                            color: "#92400e", 
                            margin: 0, 
                            fontSize: "13px",
                            lineHeight: "1.4",
                            fontStyle: "italic"
                          }}>
                            üí° <strong>L·ªùi khuy√™n:</strong> {abnormality.advice}
                          </p>
                        </div>
                      )}
                      
                      <div style={{ 
                        background: "rgba(59, 130, 246, 0.05)",
                        borderRadius: "6px",
                        padding: "12px",
                        border: "1px solid rgba(59, 130, 246, 0.2)"
                      }}>
                        <p style={{ 
                          color: "#1e40af", 
                          margin: "0 0 8px 0", 
                          fontSize: "14px",
                          fontWeight: "600"
                        }}>
                          ü©∫ X√©t nghi·ªám ƒë∆∞·ª£c ƒë·ªÅ xu·∫•t:
                        </p>
                        <ul style={{ 
                          margin: 0, 
                          paddingLeft: "20px",
                          color: "#374151",
                          fontSize: "13px",
                          lineHeight: "1.4"
                        }}>
                          {abnormality.recommendations.map((recommendation, idx) => (
                            <li key={idx} style={{ marginBottom: "4px" }}>
                              {recommendation}
                            </li>
                          ))}
                        </ul>
                      </div>
                    </div>
                  ))}
                </div>
                
                <div style={{
                  background: "linear-gradient(90deg, #dc2626 0%, #ef4444 100%)",
                  borderRadius: "10px",
                  padding: "20px",
                  textAlign: "center"
                }}>
                  <h5 style={{ 
                    color: "#fff", 
                    margin: "0 0 12px 0", 
                    fontSize: "16px",
                    fontWeight: "600"
                  }}>
                    üè• Khuy·∫øn ngh·ªã c·ªßa ch√∫ng t√¥i
                  </h5>
                  <p style={{ 
                    color: "#fef2f2", 
                    margin: "0 0 15px 0", 
                    fontSize: "14px",
                    lineHeight: "1.5"
                  }}>
                    ƒê·ªÉ ƒë·∫£m b·∫£o s·ª©c kh·ªèe sinh s·∫£n, b·∫°n n√™n th·ª±c hi·ªán c√°c x√©t nghi·ªám ƒë∆∞·ª£c ƒë·ªÅ xu·∫•t v√† tham kh·∫£o √Ω ki·∫øn b√°c sƒ© chuy√™n khoa.
                  </p>
                  <Link
                    to="/test-booking"
                    style={{
                      display: "inline-block",
                      background: "#fff",
                      color: "#dc2626",
                      textDecoration: "none",
                      padding: "12px 25px",
                      borderRadius: "25px",
                      fontWeight: "600",
                      fontSize: "14px",
                      boxShadow: "0 4px 15px rgba(0, 0, 0, 0.2)",
                      transition: "all 0.3s ease",
                      marginRight: "15px"
                    }}
                    onMouseEnter={(e) => {
                      e.target.style.transform = "translateY(-2px)";
                      e.target.style.boxShadow = "0 6px 20px rgba(0, 0, 0, 0.3)";
                    }}
                    onMouseLeave={(e) => {
                      e.target.style.transform = "translateY(0)";
                      e.target.style.boxShadow = "0 4px 15px rgba(0, 0, 0, 0.2)";
                    }}
                  >
                    üß™ ƒê·∫∑t l·ªãch x√©t nghi·ªám ngay
                  </Link>
                  <Link
                    to="/consultation-booking"
                    style={{
                      display: "inline-block",
                      background: "#fff",
                      color: "#dc2626",
                      textDecoration: "none",
                      padding: "12px 25px",
                      borderRadius: "25px",
                      fontWeight: "600",
                      fontSize: "14px",
                      boxShadow: "0 4px 15px rgba(0, 0, 0, 0.2)",
                      transition: "all 0.3s ease",
                      marginRight: "0"
                    }}
                    onMouseEnter={(e) => {
                      e.target.style.transform = "translateY(-2px)";
                      e.target.style.boxShadow = "0 6px 20px rgba(0, 0, 0, 0.3)";
                    }}
                    onMouseLeave={(e) => {
                      e.target.style.transform = "translateY(0)";
                      e.target.style.boxShadow = "0 4px 15px rgba(0, 0, 0, 0.2)";
                    }}
                  >
                    üí¨ ƒê·∫∑t l·ªãch t∆∞ v·∫•n v·ªõi b√°c sƒ©
                  </Link>
                </div>
              </div>
              );
            })()}
              
            {/* Th√™m th√¥ng tin h∆∞·ªõng d·∫´n */}
            <div style={{
              background: "rgba(255, 193, 7, 0.08)",
              borderRadius: "15px",
              padding: "25px",
              border: "1px solid rgba(255, 193, 7, 0.2)",
              marginBottom: "40px",
              textAlign: "left",
              maxWidth: "1000px",
              margin: "0 auto 40px auto"
            }}>
              <div style={{ 
                display: "flex", 
                alignItems: "center", 
                justifyContent: "center", 
                marginBottom: "20px" 
              }}>
                <div style={{ fontSize: "24px", marginRight: "10px" }}>‚ö†Ô∏è</div>
                <h4 style={{ 
                  color: "#f59e0b", 
                  margin: 0, 
                  fontSize: "18px", 
                  fontWeight: "700" 
                }}>
                  L∆∞u √Ω quan tr·ªçng
                </h4>
              </div>
              
              <div style={{
                display: "grid",
                gridTemplateColumns: "repeat(auto-fit, minmax(300px, 1fr))",
                gap: "20px"
              }}>
                <div style={{
                  background: "rgba(255, 255, 255, 0.7)",
                  padding: "15px",
                  borderRadius: "10px",
                  border: "1px solid rgba(255, 193, 7, 0.2)"
                }}>
                  <div style={{ display: "flex", alignItems: "flex-start", marginBottom: "8px" }}>
                    <span style={{ color: "#f59e0b", marginRight: "8px", fontSize: "16px" }}>üìã</span>
                    <span style={{ color: "#666", fontSize: "14px", lineHeight: "1.5" }}>
                      K·∫øt qu·∫£ ch·ªâ mang t√≠nh ch·∫•t tham kh·∫£o, kh√¥ng thay th·∫ø l·ªùi khuy√™n y t·∫ø chuy√™n nghi·ªáp.
                    </span>
                  </div>
                </div>
                
                <div style={{
                  background: "rgba(255, 255, 255, 0.7)",
                  padding: "15px",
                  borderRadius: "10px",
                  border: "1px solid rgba(255, 193, 7, 0.2)"
                }}>
                  <div style={{ display: "flex", alignItems: "flex-start", marginBottom: "8px" }}>
                    <span style={{ color: "#f59e0b", marginRight: "8px", fontSize: "16px" }}>üîÑ</span>
                    <span style={{ color: "#666", fontSize: "14px", lineHeight: "1.5" }}>
                      Chu k·ª≥ c√≥ th·ªÉ thay ƒë·ªïi do stress, c√¢n n·∫∑ng, ho·∫∑c c√°c y·∫øu t·ªë kh√°c.
                    </span>
                  </div>
                </div>
                
                <div style={{
                  background: "rgba(255, 255, 255, 0.7)",
                  padding: "15px",
                  borderRadius: "10px",
                  border: "1px solid rgba(255, 193, 7, 0.2)"
                }}>
                  <div style={{ display: "flex", alignItems: "flex-start", marginBottom: "8px" }}>
                    <span style={{ color: "#f59e0b", marginRight: "8px", fontSize: "16px" }}>üí°</span>
                    <span style={{ color: "#666", fontSize: "14px", lineHeight: "1.5" }}>
                      Th·ªùi k·ª≥ th·ª• thai: 5 ng√†y tr∆∞·ªõc v√† 1 ng√†y sau ng√†y r·ª•ng tr·ª©ng d·ª± ƒëo√°n.
                    </span>
                  </div>
                </div>
                
                <div style={{
                  background: "rgba(255, 255, 255, 0.7)",
                  padding: "15px",
                  borderRadius: "10px",
                  border: "1px solid rgba(255, 193, 7, 0.2)"
                }}>
                  <div style={{ display: "flex", alignItems: "flex-start", marginBottom: "8px" }}>
                    <span style={{ color: "#f59e0b", marginRight: "8px", fontSize: "16px" }}>üë©‚Äç‚öïÔ∏è</span>
                    <span style={{ color: "#666", fontSize: "14px", lineHeight: "1.5" }}>
                      N·∫øu c√≥ b·∫•t th∆∞·ªùng v·ªÅ chu k·ª≥, h√£y tham kh·∫£o √Ω ki·∫øn b√°c sƒ©.
                    </span>
                  </div>
                </div>
              </div>
            </div>
            
            <div style={{ 
              marginTop: "30px", 
              textAlign: "center",
              display: "flex",
              justifyContent: "center",
              gap: "20px",
              flexWrap: "wrap"
            }}>              <button
                onClick={() => handleUpdateButtonClick(setIsSubmitted, setResults, setError, setCycleAbnormalities)}
                type="button"
                style={{
                  background: "linear-gradient(90deg, #0891b2 0%, #22d3ee 100%)",
                  color: "#fff",
                  border: "none",
                  padding: "15px 30px",
                  borderRadius: "30px",
                  fontWeight: "600",
                  cursor: "pointer",
                  fontSize: "16px",
                  boxShadow: "0 4px 15px rgba(8, 145, 178, 0.3)",
                  transition: "all 0.3s ease",
                  minWidth: "160px"
                }}
                onMouseOver={(e) => {
                  e.target.style.transform = "translateY(-2px)";
                  e.target.style.boxShadow = "0 6px 20px rgba(8, 145, 178, 0.4)";
                }}
                onMouseOut={(e) => {
                  e.target.style.transform = "translateY(0)";
                  e.target.style.boxShadow = "0 4px 15px rgba(8, 145, 178, 0.3)";
                }}              >
                ÔøΩ C·∫≠p nh·∫≠t th√¥ng tin
              </button>
              <Link
                to="/"
                style={{
                  display: "inline-block",
                  background: "linear-gradient(90deg, #6b7280 0%, #9ca3af 100%)",
                  color: "#fff",
                  textDecoration: "none",
                  padding: "15px 30px",
                  borderRadius: "30px",
                  fontWeight: "600",
                  fontSize: "16px",
                  boxShadow: "0 4px 15px rgba(107, 114, 128, 0.3)",
                  transition: "all 0.3s ease",
                  minWidth: "160px",
                  textAlign: "center"
                }}
                onMouseOver={(e) => {
                  e.target.style.transform = "translateY(-2px)";
                  e.target.style.boxShadow = "0 6px 20px rgba(107, 114, 128, 0.4)";
                }}
                onMouseOut={(e) => {
                  e.target.style.transform = "translateY(0)";
                  e.target.style.boxShadow = "0 4px 15px rgba(107, 114, 128, 0.3)";
                }}
              >
                ‚Üê Quay v·ªÅ trang ch·ªß
              </Link>
            </div>
          </div>        ) : (
          <>
            {hasExistingCycle === false && (
              <div style={{ 
                background: "rgba(8, 145, 178, 0.05)", 
                borderRadius: "10px", 
                padding: "15px",
                marginBottom: "20px",
                textAlign: "center"
              }}>
                <p style={{ margin: 0, color: "#0891b2", fontWeight: "500" }}>
                  B·∫°n ch∆∞a c√≥ d·ªØ li·ªáu chu k·ª≥. Vui l√≤ng nh·∫≠p th√¥ng tin chu k·ª≥ kinh nguy·ªát c·ªßa b·∫°n.
                </p>
              </div>
            )}
            
            {hasExistingCycle === true && (
              <div style={{ 
                background: "rgba(34, 197, 94, 0.05)", 
                borderRadius: "10px", 
                padding: "15px",
                marginBottom: "20px",
                textAlign: "center"
              }}>
                <p style={{ margin: 0, color: "#059669", fontWeight: "500" }}>
                  C·∫≠p nh·∫≠t th√¥ng tin chu k·ª≥ kinh nguy·ªát c·ªßa b·∫°n
                </p>
              </div>
            )}
            
            <h2 style={{ textAlign: "center", color: "#2c3e50", marginBottom: "30px", width: "100%" }}>
              {hasExistingCycle ? "C·∫≠p nh·∫≠t chu k·ª≥ kinh nguy·ªát" : "T√≠nh to√°n chu k·ª≥ kinh nguy·ªát"}
            </h2>
              {error && (
              <div style={{ 
                background: "rgba(220, 38, 38, 0.1)", 
                color: "#dc2626", 
                padding: "15px",
                borderRadius: "8px",
                marginBottom: "20px",
                textAlign: "center",
                maxWidth: "600px",
                margin: "0 auto 20px auto"
              }}>
                <p style={{ margin: 0, fontSize: "14px", fontWeight: "500" }}>{error}</p>
              </div>
            )}
            
            <form onSubmit={handleSubmit} style={{ width: "100%", maxWidth: "1600px", margin: "0 auto" }}>
              <div style={{ display: "grid", gridTemplateColumns: "repeat(auto-fit, minmax(350px, 1fr))", gap: "25px", width: "100%" }}>
                <div style={{ display: "flex", flexDirection: "column" }}>
                  <label style={labelStyle}>Ng√†y b·∫Øt ƒë·∫ßu kinh nguy·ªát g·∫ßn nh·∫•t *</label>
                  <input
                    type="date"
                    name="startDate"
                    value={formData.startDate}
                    onChange={handleChange}
                    required
                    style={inputStyle}
                  />
                </div>
                
                <div style={{ display: "flex", flexDirection: "column" }}>
                  <label style={labelStyle}>ƒê·ªô d√†i chu k·ª≥ (ng√†y) *</label>
                  <input
                    type="number"
                    name="cycleLength"
                    value={formData.cycleLength}
                    onChange={handleChange}
                    min="21"
                    max="35"
                    required
                    style={inputStyle}
                    placeholder="28"
                  />
                </div>

                <div style={{ display: "flex", flexDirection: "column" }}>
                  <label style={labelStyle}>Th·ªùi gian kinh nguy·ªát (ng√†y) *</label>
                  <input
                    type="number"
                    name="periodLength"
                    value={formData.periodLength}
                    onChange={handleChange}
                    min="1"
                    max="10"
                    required
                    style={inputStyle}
                    placeholder="5"
                  />
                </div>

                <div style={{ display: "flex", flexDirection: "column" }}>
                  <label style={labelStyle}>M·ª©c ƒë·ªô m√°u kinh (t√πy ch·ªçn)</label>
                  <select
                    name="flowLevel"
                    value={formData.flowLevel}
                    onChange={handleChange}
                    style={inputStyle}
                  >
                    <option value="">-- Ch·ªçn m·ª©c ƒë·ªô --</option>
                    <option value="√≠t">√çt (1-2 bƒÉng v·ªá sinh/ng√†y)</option>
                    <option value="trung b√¨nh">Trung b√¨nh (3-4 bƒÉng v·ªá sinh/ng√†y)</option>
                    <option value="nhi·ªÅu">Nhi·ªÅu (5+ bƒÉng v·ªá sinh/ng√†y)</option>
                  </select>
                </div>
              </div>

              <div style={{ marginTop: "35px", textAlign: "center" }}>
                <button
                  type="submit"
                  style={{
                    background: "linear-gradient(90deg, #0891b2 0%, #22d3ee 100%)",
                    color: "#fff",
                    border: "none",
                    padding: "14px 35px",
                    borderRadius: "30px",
                    fontSize: "16px",
                    fontWeight: "600",
                    cursor: "pointer",
                    transition: "all 0.3s ease"
                  }}
                  onMouseOver={(e) => e.target.style.transform = "scale(1.05)"}
                  onMouseOut={(e) => e.target.style.transform = "scale(1)"}
                >
                  {hasExistingCycle ? "C·∫≠p nh·∫≠t chu k·ª≥" : "T√≠nh to√°n chu k·ª≥"}
                </button>
              </div>
            </form>
          </>        )}
      </main>

      {/* Footer */}
      <footer style={{
        marginTop: "40px",
        padding: "20px",
        backgroundColor: "#e0f2fe",
        textAlign: "center",
        color: "#0891b2",
        width: "100%"
      }}>
        <p>¬© 2025 H·ªá th·ªëng ChƒÉm S√≥c S·ª©c Kh·ªèe Gi·ªõi T√çnh.</p>
        <p style={{ marginTop: "10px" }}>Hotline: 1900-xxxx | Email: support@healthcare.com</p>
      </footer>
    </div>
  );
};

export default PeriodTracking;
